{% extends 'base.html.twig' %}

{% block title %}{{ page_title }} - OAuth School{% endblock %}

{% block body %}

<div class="container">
  <div class="row">
    <div class="col-md-10 ml-md-auto">

      <h1>{{ page_title }}</h1>

      {% if app.session.get('complete_' ~ base_route) %}
        <div class="alert alert-success alert-large">
          <i class="fas fa-check-circle"></i> You have completed this exercise!
          {% if app.session.get('openid_email') %}
            <br>
            email: <code>{{ app.session.get('openid_email')|e }}</code><br>
            name: <code>{{ app.session.get('openid_name')|e }}</code>
          {% endif %}
        </div>
      {% endif %}

      {% if app.session.get('complete_introduction') == false %}
        <div class="alert alert-warning" role="alert">
          <div>You need to complete the first exercise and enter your server's issuer URL before you can continue!</div>
          <div><a href="{{ path('introduction') }}">Back to Exercise 1</a></div>
        </div>
      {% endif %}

      {% for message in app.flashes('error') %}
        <div class="alert alert-danger" role="alert">
          {{ message }}
        </div>
      {% endfor %}

      {% for message in app.flashes('success') %}
        <div class="alert alert-success" role="alert">
          {{ message }}
        </div>
      {% endfor %}

      {% if(app.session.get('openid_claims') == null) %}

        {% if app.session.get('authorizationURLSuccess') == null %}

          <p>In this exercise you’ll learn how to request an OpenID Connect ID token and extract the user’s information from it.</p>

          <p>The goal of this exercise is to get an ID token and to extract the user’s profile information from the ID token. We will be building on the previous exercise where you used the authorization code flow to get an access token. Rather than repeat all the setup steps here, we’ll assume you have already created an application and have gone through the authorization code flow at least once.</p>

          <p>To get an ID token, you need to add the <code>openid</code> scope to the authorization request. You can also add the <code>profile</code> and <code>email</code> scopes to get more information about the user. Build the authorization URL including those three scopes.</p>

          <p><button id="pkce-generate-random-string" class="btn btn-secondary">Generate Random String</button></p>
          <div class="input-group" style="margin-bottom: 12px;">
            <span class="input-group-text">Code Verifier</span>
            <input class="code form-control" id="pkce-plaintext" placeholder="plaintext random string">
          </div>

          <p>Save the Code Verifier and keep it secret, you won’t need that until the end.</p>

          <p><button id="pkce-calculate-sha256" class="btn btn-secondary">Calculate Hash</button></p>
          <div class="input-group" style="margin-bottom: 12px;">
            <span class="input-group-text">Code Challenge</span>
            <input class="code form-control" id="pkce-sha256" placeholder="base64-url-encoded SHA256 hash of the code verifier">
          </div>

          <p>Fill in the placeholder values with your own values. (Make sure to replace the curly brackets, those are just to indicate placeholder values.)</p>

        {% endif %}


        <h2>Authorization Request</h2>

        <p>Note that we are still using the authorization code flow with PKCE when getting the ID token so that we get it over the back channel, simplifying the process by avoiding the need to verify the ID token signature.</p>


        <div class="card bg-light mb-3 mt-3 {{ app.session.get('complete_introduction') ? '' : 'disabled' }}">
          <div class="card-body">

            <form method="post" action="{{ path(base_route ~ '/authz') }}">
              <div class="mb-3">
                <textarea class="form-control code" name="authorizationURL" id="authorizationURL" aria-describedby="authorizationURLHelp" rows="8" placeholder="https://xxxxxx.us.auth0.com/authorize?
  response_type=code&
  client_id={YOUR_CLIENT_ID}&
  state={RANDOM_STRING}&
  scope={SCOPE}&
  redirect_uri=https://example-app.com/redirect&
  code_challenge={YOUR_CODE_CHALLENGE}&
  code_challenge_method=S256
" {{ app.session.flashbag.has('loginURL') ? 'readonly' }}>{{ app.session.get('authorizationURL') ?: '' }}</textarea>
                <div id="authorizationURLHelp" class="form-text">Create the initial URL for the authorization request and paste it above. Once it's correct, a "Log In" button with that URL will appear below</div>
              </div>
              {% if app.session.flashbag.has('loginURL') %}
                <a href="{{ app.session.flashbag.get('loginURL')[0] }}" class="btn btn-primary" target="_blank">Log In</a>
                <a href="?reset=1" class="btn">Reset</a>
              {% else %}
                <button type="submit" class="btn btn-primary">Check Your URL</button>
              {% endif %}
            </form>

          </div>
        </div>

        {% if app.session.get('authorizationURLSuccess') %}

          <p>Now you’ll need to make a POST request to the token endpoint to get an access token and ID token. Replace the placeholder values with your own.</p>

          <textarea class="form-control code" rows="8">curl -X POST {{ app.session.get('token_endpoint') ?? 'https://xxxxxx.us.auth0.com/oauth/token' }} \
  -d grant_type=authorization_code \
  -d redirect_uri=https://example-app.com/redirect \
  -d client_id={YOUR_CLIENT_ID} \{{ confidential_client ? "\n  -d client_secret={YOUR_CLIENT_SECRET} \\" : "" }}
  -d code_verifier={YOUR_CODE_VERIFIER} \
  -d code={YOUR_AUTHORIZATION_CODE}</textarea>

        <p>Paste the entire response (not just the access token) below to check your work.</p>

        {% endif %}

        <h2>Token Response</h2>
        <div class="card bg-light mb-3 mt-3 {{ app.session.get('complete_introduction') ? '' : 'disabled' }}">
          <div class="card-body">

            <form method="post" action="{{ path(base_route ~ '/save') }}">
              <div class="mb-3">
                <textarea class="form-control" name="tokenResponse" aria-describedby="tokenHelp" rows="8" placeholder="{&#13;  &quot;token_type&quot;: &quot;Bearer&quot;,&#13;  ...&#13;}"></textarea>
                <div id="tokenHelp" class="form-text">Use the authorization code flow to get an ID token, then paste the entire token response JSON here to check your work</div>
              </div>
              <button type="submit" class="btn btn-primary">Check Your Response</button>
            </form>

          </div>
        </div>

      {% endif %}


      <h2>ID Token Claims</h2>
      <div class="card bg-light mb-3 mt-3 {{ app.session.get('complete_introduction') and app.session.get('openid_claims') ? '' : 'disabled' }}">
        <div class="card-body">

          <p>The ID token returned from the token endpoint is below.</p>

          <p><textarea class="form-control code" rows="10" readonly>{{ id_token }}</textarea></p>

          <p>Parse the claims from the JWT using a <a href="https://example-app.com/base64" target="_blank">Base64 decoder</a> and paste the user's subject, name and email address into the form below. Remember that because you got this ID token over the back channel, you don't need to worry about verifying the JWT signature.</p>

          <form method="post" action="{{ path(base_route ~ '/claims') }}">
            <div class="mb-3">
              <label for="openid_sub" class="form-label">Subject (<code>sub</code>)</label>
              <input type="text" class="form-control" name="openid_sub">
            </div>
            <div class="mb-3">
              <label for="openid_email" class="form-label">Email address</label>
              <input type="email" class="form-control" name="openid_email" placeholder="user@example.com">
            </div>
            <div class="mb-3">
              <label for="openid_name" class="form-label">Name</label>
              <input type="text" class="form-control" name="openid_name">
            </div>
            <button type="submit" class="btn btn-primary">Verify</button>
            <a href="?reset=1" class="btn">Reset</a>
          </form>

        </div>
      </div>


    </div>
  </div>
</div>

{% endblock %}
